# This file was generated by https://github.com/kamilchm/go2nix v1.2.1
# then modified manually to use buildGoModule with go.mod support
{ lib, stdenv, buildGoModule, fetchFromGitHub
, bash, coreutils, procps, iproute2, go_1_25
}:

(buildGoModule.override { go = go_1_25; }) rec {
  pname = "batexpe";
  version = "1.2.0";

  src = fetchFromGitHub {
    owner = "Lucas-Doctorate-Project";
    repo = "batexpe";
    rev = "9f5a8ab3983586ccdf6b6214a48badf8501a6c46";
    sha256 = "sha256-ZCSwL/8Duwu9ECID/P8btVSHIwVZQx9yF6AZ8gbrMEs=";
  };

  vendorHash = "sha256-p7F4CWJW6a2tqe2fHh/9gKMabzx4Vo4L0q7b8MWTCQY=";

  propagatedBuildInputs = [bash coreutils]
    ++ lib.optionals stdenv.isLinux [procps iproute2];
  
  meta = with lib; {
    description = "set of Go tools around Batsim to simplify experiments";
    longDescription = ''
      It includes:
      - robin: manages the execution of one simulation. It is meant to be as
        robust as possible, as it is the core building block to create experiment
        workflows with Batsim.
      - robintest: is a robin wrapper mainly used to test robin.  robintest
        notably allows to specify what (robin/batsim/scheduler) result is
        expected.
      - the multiple commands are just wrappers around the batexpe library
        (written in Go).  This allows users to build their own tools (in Go) with
        decent code reuse.
    '';
    license = licenses.lgpl3;
    broken = false;
    maintainers = with maintainers; [ mickours ];
    platforms = platforms.unix;
  };
}
